---
- name: Start Oracle Listener
  become_user: "{{ _oracle.user }}"
  shell: |
    source ~/.bashrc && {{ _oracle.home_dir }}/bin/lsnrctl start
  register: start_oracle_listener
- debug: msg={{ start_oracle_listener }}
  # ignore_errors: true


#- name: Copy Script Template to Create Oracle Multi-Tenant Database
#  become_user: "{{ _oracle.user }}"
#  template: src={{ item.fn }}.j2 dest={{ item.copy_dir }}/{{ item.fn }} owner=oracle group=oinstall mode=0755 force=yes
#  register: copy_script_multi_tenant_db
#  with_items:
#    - { fn: "create-multi-tenant-db.sh", copy_dir: "{{ _oracle.home_dir }}" }
#- debug: msg={{ copy_script_multi_tenant_db }}


#- name: Create and Oracle Multi-Tenant Database
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/create-multi-tenant-db.sh
#  ignore_errors: true
#  async: 2000
#  poll: 20
#  register: create_oracle_multi_tenant_db
#- debug: msg={{ create_oracle_multi_tenant_db }}


#- name: Enable Autostart of Oracle Database Instances
#  become_user: "{{ _oracle.root_user }}"
#  shell: |
#    sed -i 's/:N$/:Y/g' /etc/oratab
#  register: modify_oratab
#- debug: msg={{ modify_oratab }}


#- name: Copy Query Template Files
#  become_user: "{{ _oracle.user }}"
#  template: src={{ item.fn }}.j2 dest={{ item.copy_dir }}/{{ item.fn }} owner=oracle group=oinstall mode=0644 force=yes
#  register: copy_query_files_templates
#  with_items:
#    - { fn: "change-password-system.sql", copy_dir: "{{ _oracle.home_dir }}" }
#    - { fn: "enable-omf-autostart.sql", copy_dir: "{{ _oracle.home_dir }}" }
#    - { fn: "grant-all-priv-oracleuser.sql", copy_dir: "{{ _oracle.home_dir }}" }
#    - { fn: "create-oracleuser.sql", copy_dir: "{{ _oracle.home_dir }}" }
#    - { fn: "create-user-table.sql", copy_dir: "{{ _oracle.home_dir }}" }
#- debug: msg={{ copy_query_files_templates }}
#
#
#- name: Enable Oracle Managed File (OMF) and Autostart of Pluggable Database with the Startup of Container Database
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus '/ as sysdba' @{{ _oracle.home_dir }}/enable-omf-autostart.sql
#  register: enable_omf_autostart
#- debug: msg={{ enable_omf_autostart }}
#  # sqlplus -S dbuser/dbpasswd@dbsid @scriptname </dev/null


- name: Copy Systemd Configuration of Oracle into /etc/systemd/system
  template: src=dbora.service.j2 dest=/etc/systemd/system/dbora.service owner=root group=root mode=644 force=yes
  register: copy_dbora_systemd_config
- debug: msg={{ copy_dbora_systemd_config }}


- name: Restart and Enable Oracle Database Service
  become_user: "{{ _oracle.root_user }}"
  systemd:
    name: dbora
    state: restarted
    enabled: yes
    daemon_reload: yes
  register: restart_dbora_service
  until: restart_dbora_service is succeeded
  retries: 5
  delay: 20
- debug: msg={{ restart_dbora_service }}


#- name: Change Password of Internal Admin Users such as Sys and System User
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus '/ as sysdba' @{{ _oracle.home_dir }}/change-password-system.sql
#  register: change_password_sys_system
#- debug: msg={{ change_password_sys_system }}
#
#
#- name: Create Oracle User with Password and Grant Privileges / Check Connections By Sys and System User
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus system/changeme @{{ _oracle.home_dir }}/create-oracleuser.sql
#  register: create_oracle_user
#- debug: msg={{ create_oracle_user }}
#
#
#- name: Connect with Oracle User and Create Table, Insert Data
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus oracleuser/changeme @{{ _oracle.home_dir }}/create-user-table.sql
#  register: connect_oracle_user
#- debug: msg={{ connect_oracle_user }}
#
#
#- name: Copy Template of CMAN, Listener and Tnsnames for Remote Connection
#  become_user: "{{ _oracle.user }}"
#  template: src={{ item.fn }}.j2 dest={{ item.copy_dir }}/{{ item.fn }} owner=oracle group=oinstall mode=0644 force=yes
#  register: copy_remote_connection_templates
#  with_items:
#    - { fn: "cman.ora", copy_dir: "{{ _oracle.home_dir }}/network/admin" }
#    - { fn: "listener.ora", copy_dir: "{{ _oracle.home_dir }}/network/admin" }
#    - { fn: "tnsnames.ora", copy_dir: "{{ _oracle.home_dir }}/network/admin" }
#- debug: msg={{ copy_remote_connection_templates }}
#
#
#- name: Restart Oracle Database Service
#  become_user: "{{ _oracle.root_user }}"
#  systemd:
#    name: dbora
#    state: restarted
#  register: restart_dbora_systemd
#- debug: msg={{ restart_dbora_systemd }}
#
#
#- name: Check if Remote Connection is Working by Using SQLPlus Command
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && echo 'select 1 from dual;' | {{ _oracle.home_dir }}/bin/sqlplus oracleuser/changeme@cdb1
#  register: check_remote_connection
#  # shell: source ~/.bashrc && echo 'select 1 from dual;' | {{ _oracle.home_dir }}/bin/sqlplus oracleuser/changeme
#  # shell: source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus oracleuser/changeme@cdb1
#- debug: msg={{ check_remote_connection }}
#
#
#- name: Grant All Privileges to Oracleuser
#  become_user: "{{ _oracle.user }}"
#  shell: |
#    source ~/.bashrc && {{ _oracle.home_dir }}/bin/sqlplus '/ as sysdba' @{{ _oracle.home_dir }}/grant-all-priv-oracleuser.sql
#  register: grant_all_privileges_oracleuser
#- debug: msg={{ grant_all_privileges_oracleuser }}
#
