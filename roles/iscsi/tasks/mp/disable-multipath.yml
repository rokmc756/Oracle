---
#- name: Copy iSCSI Initiator Config Files
#  vars:
#    init_iqn: "{{ _iscsi.target.iqn02 }}"
#  template: src=initiatorname.iscsi.j2 dest=/etc/iscsi/initiatorname.iscsi owner=root group=root mode=644 force=yes
#  register: copy_initiatorname
#  ignore_errors: true
#  when: item.client == inventory_hostname
#  with_items: "{{ _iscsi.target.disks }}"


#- name: Enable and Start iSCSId
#  systemd:
#    name: "{{ item }}"
#    state: restarted
#  register: restart_iscsid
#  ignore_errors: true
#  until: restart_iscsid is succeeded
#  retries: 3
#  delay: 5
#  with_items:
#    - "iscsid"


#- name: Kill iSCSI Session via Path 1
#  shell: |
#    iscsiadm --mode node -T {{ _iscsi.target.iqn02 }}:{{ item.group }}.{{ item.name }} \
#    -p {{ hostvars[groups['iscsi'][1]].ansible_ssh_host1 }}:3260 -u
#  register: kill_iscsi_path1_session
#  ignore_errors: true
#  when: item.client == inventory_hostname
#  with_items: "{{ _iscsi.target.disks }}"


#- name: Copy iSCSI Initiator Config Files
#  vars:
#    init_iqn: "{{ _iscsi.target.iqn01 }}"
#  template: src=initiatorname.iscsi.j2 dest=/etc/iscsi/initiatorname.iscsi owner=root group=root mode=644 force=yes
#  register: copy_initiatorname
#  ignore_errors: true
#  when: item.client == inventory_hostname
#  with_items: "{{ _iscsi.target.disks }}"


#- name: Enable and Start iSCSId
#  systemd:
#    name: "{{ item }}"
#    state: restarted
#  register: restart_iscsid
#  ignore_errors: true
#  until: restart_iscsid is succeeded
#  retries: 3
#  delay: 5
#  with_items:
#    - "iscsid"


- name: Kill iSCSI Session via Path 1
  shell: |
    iscsiadm --mode node -T {{ _iscsi.target.iqn01 }}:{{ item.group }}.{{ item.name }} \
    -p {{ hostvars[groups['iscsi'][0]].ansible_ssh_host1 }}:3260 -u
  register: kill_iscsi_path1_session
  ignore_errors: true
  when: item.client == inventory_hostname
  with_items: "{{ _iscsi.target.clients }}"


- name: Stop Multipath
  shell: |
    multipath -f {{ item.mp_alias }}
  register: stop_multipath
  ignore_errors: true
  when: item.client == inventory_hostname
  with_items: "{{ _iscsi.target.clients }}"


- name: Force Stop Multipath
  shell: |
    multipath -F
  register: force_stop_multipath
  ignore_errors: true


- name: Stop and Disable Multipathd
  systemd:
    name: "{{ item }}"
    state: stopped
  register: stop_multipathd
  ignore_errors: true
  until: stop_multipathd is succeeded
  retries: 3
  delay: 5
  with_items:
    - "multipathd"


- name: Uninstall Multipath Package
  package:
    name: device-mapper-multipath
    state: absent
  register: uninstall_multipath_pkg
  ignore_errors: true


- name: Delete Multipath Config
  file:
    path: /etc/multipath.conf
    state: absent
  register: delete_multipath_config
  ignore_errors: true

