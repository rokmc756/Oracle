---
- name: Display pre Database Software Install Message
  remote_user: "{{ _oracle.root_user }}"
  debug:
    msg:
      - 'Oracle Database Software {{ oracle_version }} Installation started for Single Instance at {{ ansible_date_time.iso8601 }}:'


- name: Put SELinux in Permissive mode, Logging Actions that Would be Blocked
  selinux:
    policy: targeted
    state: permissive
  register: set_selinux_permissive
- debug: msg={{ set_selinux_permissive }}


- name: Create the limit.conf and sysctl.conf
  template:
    src: "{{ item.fn }}.j2"
    dest: "{{ item.copy_dir }}/{{ item.fn }}"
    owner: root
    group: root
    mode: 644
    force: yes
  register: create_oracle_config
  with_items:
    - { fn: "30-oracle-limits.conf", copy_dir: "/etc/security/limits.d" }
    - { fn: "98-oracle-sysctl.conf", copy_dir: "/etc/sysctl.d" }
  notify:
    - Reload Sysctl
- debug: msg={{ create_oracle_config }}


- name: Open Ports
  firewalld:
    zone: public
    port: "{{ item.port }}/{{ item.proto }}"
    permanent: yes
    immediate: yes
    state: enabled
  register: open_ports
  loop: "{{ _oracle.ports }}"
- debug: msg={{ open_ports }}


- name: Check if Kernel Boot Parameters Already Exists
  lineinfile:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=)(.*)(numa=off transparent_hugepage=never clocksource=tsc.*)(".*)$'
    state: absent
  check_mode: true
  changed_when: false                               # This just makes things look prettier in the logs
  register: check_oracle_boot_parameter
- debug: msg={{ check_oracle_boot_parameter }}


- name: Tune Boot Kernel Parameters
  lineinfile:
    path: /etc/default/grub
    regexp: '^(GRUB_CMDLINE_LINUX=)(.*)(".*)$'
    line: '\1\2 {{ item.option }}={{ item.value }}\3'
    state: present
    backrefs: yes
    backup: yes
  register: tune_boot_parameter
  with_items:
    - { option: "numa", value: "off" }
    - { option: "transparent_hugepage", value: "never" }
    - { option: "clocksource", value: "tsc" }
  when: check_oracle_boot_parameter.found == 0
- debug: msg={{ tune_boot_parameter }}
  # regexp: '^(GRUB_CMDLINE_LINUX=(?:(?![" ]{{ item.option | regex_escape }}=).)*"?)\s*(?:{{ item.option | regex_escape }}=\S+\s*)?(.*")$'


- name: Update GRUB2 Config
  shell: |
    grub2-mkconfig -o /boot/grub2/grub.cfg
  register: update_grup2_config
- debug: msg={{ update_grup2_config }}


- name: Reboot System and Wait for Come Back
  shell: |
    echo "Reboot System and Wait for Come Back"
  notify:
    - Restart System
    - Waiting for Server to Come Back after Reboot


- meta: flush_handlers


#- name: Enable development package repository for Oracle Database
#  become: yes
#  yum_repository:
#    name: devel
#    description: Rocky Linux $releasever - Devel WARNING! FOR BUILDROOT AND KOJI USE
#    mirrorlist: https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=Devel-$releasever
#    enabled: yes

