---
- name: Get interface name from Prefix of IP Addresses Provided
  set_fact:
    netdev0: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _oracle.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev2: "{{ ansible_interfaces | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _oracle.net.ipaddr2 ) | map(attribute='device') | first }}"


- name: Get IP Address from provided network device name
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr2: "{{ hostvars[inventory_hostname]['ansible_'~netdev2].ipv4.address }}"


- name: Set Default Network Device and Address
  set_fact:
    netdev: "{{ netdev2 }}"
    _netdev: "{{ 'ansible_'~ netdev2 }}"
    _ipaddr: "{{ ipaddr2 }}"


- name: Define Facts for All Worker's Hostname
  set_fact:
    all_ext1_hostnames: "{{ groups['all'] | map('extract', hostvars, ['ansible_hostname']) | join(' ') }}"
- debug: msg={{ all_ext1_hostnames }}


# all_net2_ipaddrs: "{{ groups['all'] | map('extract', hostvars, ['ansible_'~ netdev2, 'ipv4', 'address']) | join(',') }}" -> Previously Working, Currently not Working when netdev name are different in different servers
# all_net2_ipaddrs: "{{ hostvars | json_query('*.ansible_facts.default_ipv4.address') | join(',') }}" -> OK when not specifying netdev name
- name: Define Fact for All Worker's First IP Addresses In case of different netdev name
  set_fact:
    all_net2_ipaddrs: "{{ groups['all'] | map('extract', hostvars, 'ipaddr2') | join(',') }}"
- debug: msg={{ all_net2_ipaddrs }}


# RHEL
- set_fact:
    rh_install_pks: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh7_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int <= 7
- set_fact:
    rh_install_pkgs: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh8_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int == 8
- set_fact:
    rh_install_pkgs: "{{ rh_common_pkgs ~ ',' ~ rh_common_devel_pkgs  ~ ',' ~ rh9_common_devel_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" ) and ansible_distribution_major_version|int >= 9
- set_fact:
    install_pkgs: "{{ rh_install_pkgs }}"
  when: ( ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky" )


# Ubuntu
- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt20_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int <= 20
- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt22_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int == 22
- set_fact:
    ubt_install_pkgs: "{{ ubt_common_pkgs ~ ',' ~ ubt_common_devel_pkgs  ~ ',' ~ ubt23_common_devel_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" ) and ansible_distribution_major_version|int >= 23
- set_fact:
    install_pkgs: "{{ ubt_install_pkgs }}"
  when: ( ansible_distribution == "Ubuntu" or ansible_distribution == "Debian" )


# SUSE
- set_fact:
    suse_install_pkgs: "{{ suse_common_pkgs ~ ',' ~ suse_common_devel_pkgs  ~ ',' ~ suse15_common_devel_pkgs }}"
  when: ansible_distribution == "openSUSE Leap" and ansible_distribution_major_version|int <=  15
- set_fact:
    install_pkgs: "{{ suse_install_pkgs }}"
  when: ansible_distribution == "openSUSE Leap" and ansible_distribution_major_version|int <=  15


