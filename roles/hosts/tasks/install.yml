---
- name: Install YUM or DNF Config Manager for RedHat Based Linux Distribution
  package: name={{ item }} state=present
  with_items:
    - "dnf-utils"
  ignore_errors: true
  when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky"
  # "yum-utils"


- name: Enable Development Package Repository for RedHat Based Linux Distribution
  shell: |
    yum-config-manager --enable {{ item }}
  with_items:
    - "devel"
  when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution == "Rocky"


- name: Install Prerequest Software Packages
  package: name={{ item }} state=present
  with_items: "{{ install_pkgs }}"


- name: Add the Inventory Into /etc/hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644


- name: Ensure Group "{{ sudo_group }}" Exists
  group:
    name: "{{ sudo_group }}"
    state: present


- name: Create "{{ sudo_user }}" User
  user:
    name: "{{ sudo_user }}"
    state: present
    password: "{{ 'changeme' | password_hash('sha512','A512') }}"
    shell: /bin/bash
    group: "{{ sudo_group }}"
    createhome: yes
    home: "/home/{{ sudo_user }}"


# This will overwrite the first line which starts with %wheel
- name: Add Group to /etc/sudoers File Without Password
  become_user: root
  lineinfile: "dest=/etc/sudoers state=present regexp='^%{{ sudo_user }}' line='%{{ sudo_user }} ALL=(ALL) NOPASSWD: ALL'"


- name: Read /etc/group Entries
  # become: true
  shell: "/usr/bin/getent group | grep ^sudo{{':'}} | cut -f4 -d{{':'}}"
  register: etc_group
  changed_when: false


- name: Split Group Members
  set_fact:
    etc_group_members: "{{ etc_group.stdout.split(',') }}"
    changed_when: false


- name: Add User to 'sudo' Group (Debian)
  user:
    name: "{{ sudo_user }}"
    groups: sudo
    append: true
    state: present
    createhome: true
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"


- name: Check Needed OS Tools Exist
  shell: which sshpass ssh-keygen ssh-copy-id
  register: os_tools_exist
  ignore_errors: true


- name: Fail Execution If Any Of the Needed OS Tools Is Missing
  fail:
    msg: "One or more of the: sshpass, ssh-keygen, ssh-copy-id are missing on this machine. Please install them - using your distribution's recommended method - before continuing."
  when: os_tools_exist.rc != 0

