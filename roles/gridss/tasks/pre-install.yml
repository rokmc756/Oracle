---
#==========================================================================================================================================
# (1) Assumption: Oracle Grid Infrastructure Software is Downloaded and Staged
# (2) Install Cluster Verification Utility
# (3) Unpack Oracle Grid Infrastructure Software to the Oracle Home Directory into the Primary Node
# (4) Run Cluster Verification Checks for CRS Installation
#==========================================================================================================================================

- name: Copy Oracle 21c Grid Infrastructure Software Response File to the Target Database Server
  remote_user: "{{ root_user }}"
  copy: src=/etc/ansible/roles/racgi_ss_21c_install/templates/{{ item }} dest={{ stage_dir }} owner=grid group=oinstall mode=0775
  with_items:
    - gridsetup21c.rsp
    - oracle-database-preinstall-21c-1.0-1.el7.x86_64.rpm


- name: Unpack Oracle 21c Grid Infrastructure Software
  remote_user: "{{ root_user }}"
  become_user: "{{ grid_user }}"
  unarchive:
     src={{ software_dir }}/LINUX.X64_213000_grid_home.zip
     dest="{{ grid_home }}"
     remote_src=no
     mode=0775
     group="{{ oracle_install_group }}"
     owner="{{ grid_user }}"
  when: inventory_hostname in groups['primary']


- name: Install CVU RPM from a Local File
  yum:
    name: /u02/app/21.3/grid/cv/rpm/cvuqdisk-1.0.10-1.rpm
    state: present
  when: inventory_hostname in groups['primary']


#- name: Transfer CVU File from ora-x1 to ora-x2
#  synchronize:
#    src: /u02/app/21.3/grid/cv/rpm/cvuqdisk-1.0.10-1.rpm
#    dest: /u02/stage/cvuqdisk-1.0.10-1.rpm
#    mode: pull
#  delegate_to: ora-x2
#  when: inventory_hostname in groups['primary']


#- name: Install CVU RPM from a Local File
#  when: inventory_hostname in groups['secondary']
#  yum:
#    name: /u02/stage/cvuqdisk-1.0.10-1.rpm
#    state: present


#- name: Run Cluster Verification Checks for CRS Installation
#  become: yes
#  become_user: grid
#  command:            '{{ grid_home}}/runcluvfy.sh stage -post crsinst -n "{{ all_db_hosts }}" -verbose'
#  register:           cluvfy_stage_pre_crsinst
#  failed_when:        false
#  no_log:             true
#  when: inventory_hostname in groups['primary']


