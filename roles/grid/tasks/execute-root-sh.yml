---
# =============================================================================
# (1) Execute root.sh scripts
# =============================================================================

- name: Execute root.sh on the Primary Node
  remote_user: "{{ root_user }}"
  shell: |
    {{ grid_home }}/root.sh
  args:
    executable: /bin/bash
  register: rootnode1
  when: inventory_hostname in groups['primary']


- name: Get the Logfile Name on the Primary Node
  remote_user: "{{ root_user }}"
  shell: |
    echo {{ rootnode1.stdout }} | grep -oP '(?<=Check).*?(?=for)'
  args:
    executable: /bin/bash
  register: logfile
  when: inventory_hostname in groups['primary']


- name: Get the Logfile Information on the Primary Node
  remote_user: "{{ root_user }}"
  shell: |
    cat {{ logfile.stdout }}
  args:
    executable: /bin/bash
    chdir: /u01/app
  with_items:
    - logino.log
  register: rootloginfon1
  when: inventory_hostname in groups['primary']


- debug:
    var: rootloginfon1.results[0].stdout_lines
  when: inventory_hostname in groups['primary']


- name: Execute root.sh on the Secondary Nodes
  remote_user: "{{ root_user }}"
  shell: |
    {{ grid_home }}/root.sh
  args:
    executable: /bin/bash
  register: rootnode2
  when: inventory_hostname in groups['secondary']


- name: Get the Logfile Information on the Secondary Nodes
  remote_user: "{{ root_user }}"
  shell: |
    echo {{ rootnode2.stdout }} | grep -oP '(?<=Check).*?(?=for)'
  args:
    executable: /bin/bash
  register: logfile
  when: inventory_hostname in groups['secondary']


- name: Get the logfile Information on the Secondary Nodes
  remote_user: "{{ root_user }}"
  shell: |
    cat {{ logfile.stdout }}
  with_items:
    - logino.log
  args:
    chdir: /u01/app
    executable: /bin/bash
  register: rootloginfon2
  when: inventory_hostname in groups['secondary']


- debug:
    var: rootloginfon2.results[0].stdout_lines
  when: inventory_hostname in groups['secondary']

